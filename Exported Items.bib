@techreport{u.s.censusbureauSIPPSyntheticBeta2015b,
  type = {[{{Computer}} File]},
  title = {{{SIPP Synthetic Beta Version}} 7.0},
  author = {{U.S. Census Bureau}},
  year = {2015},
  address = {Washington,DC and Ithaca, NY, USA},
  institution = {Cornell University, Synthetic Data Server [distributor]},
  url = {http://www2.vrdc.cornell.edu/news/data/sipp-synthetic-beta-file/},
  annotation = {Published: Computer file}
}

@misc{noauthor_reproducible_nodate,
    title = {Reproducible {Computational} {Environments} {Using} {Containers}: {Introduction} to {Docker}: {Summary} and {Setup}},
    url = {https://carpentries-incubator.github.io/docker-introduction/},
    urldate = {2025-04-09},
}
@misc{nust_automatically_2017,
    title = {Automatically archiving reproducible studies with {Docker}},
    url = {https://zenodo.org/records/824007},
    abstract = {Reproducibility of computations is crucial in an era where data is born digital and analysed algorithmically. Most studies however only publish the results, often with figures as important interpreted outputs. But where do these figures come from? Scholarly articles must provide not only a description of the work but be accompanied by data and software. R offers excellent tools to create reproducible works, i.e. Sweave and RMarkdown. Several approaches to capture the workspace environment in R have been made, working around CRAN’s deliberate choice not to provide explicit versioning of packages and their dependencies. They preserve a collection of packages locally (packrat, pkgsnap, switchr/GRANBase) or remotely (MRAN timemachine/checkpoint), or install specific versions from CRAN or source (requireGitHub, devtools). Installers for old versions of R are archived on CRAN. A user can manually re-create a specific environment, but this is a cumbersome task.
We introduce a new possibility to preserve a runtime environment including both, packages and R, by adding an abstraction layer in the form of a container, which can execute a script or run an interactive session. The package containeRit automatically creates such containers based on Docker. Docker is a solution for packaging an application and its dependencies, but shows to be useful in the context of reproducible research (Boettiger 2015). The package creates a container manifest, the Dockerfile, which is usually written by hand, from sessionInfo(), R scripts, or RMarkdown documents. The Dockerfiles use the Rocker community images as base images. Docker can build an executable image from a Dockerfile. The image is executable anywhere a Docker runtime is present.
containeRit uses harbor for building images and running containers, and sysreqs for installing system dependencies of R packages. Before the planned CRAN release we want to share our work, discuss open challenges such as handling linked libraries (see discussion on geospatial libraries in Rocker), and welcome community feedback.
https://user2017.sched.com/event/785b77e931775df6849f108615605c01
https://github.com/o2r-project/containerit/},
    urldate = {2024-04-18},
    author = {Nüst, Daniel},
    month = jul,
    year = {2017},
    doi = {10.5281/zenodo.824007},
    keywords = {Container, Docker, Open Science, Reproducibility, Reproducible Research},
}
@misc{mcdermott_data_2023,
    address = {Github},
    type = {Lecture {Notes}},
    title = {Data {Science} for {Economists}},
    url = {https://github.com/uo-ec607/lectures},
    urldate = {2025-04-09},
    author = {McDermott, Grant},
    year = {2023},
}
@misc{the_turing_way_community_containers_2024,
    title = {Containers},
    url = {https://book.the-turing-way.org/reproducible-research/renv/renv-containers},
    language = {en},
    urldate = {2025-04-09},
    author = {{The Turing Way Community}},
    year = {2024},
}
@misc{eyers_reproducible_2020,
    title = {Reproducible {Computational} {Environments} {Using} {Containers}},
    url = {https://carpentries-incubator.github.io/docker-introduction/},
    urldate = {2025-04-09},
    author = {Eyers, D. M. and Stevens, S. L. R. and Turner, A. and Koch, C. and Cohen, J.},
    year = {2020},
}
@misc{aea_data_editor_use_2021,
    title = {Use of {Docker} for {Reproducibility} in {Economics}},
    url = {https://aeadataeditor.github.io/posts/2021-11-16-docker},
    abstract = {In reproducibility verification, a common scenario is the author response “but-it-works-on-my-machine”. Finding common environments is important in such situations, to demonstrate that the error does arise, reproducibly, but also to share with the author the exact environment so that the issue can be fixed. Shipping around laptops probably isn’t the right solution. We illustrate how we addressed some of those cases using container technology throughout this post.},
    language = {en},
    urldate = {2022-01-03},
    journal = {Office of the AEA Data Editor},
    author = {{AEA Data Editor}},
    month = nov,
    year = {2021},
}